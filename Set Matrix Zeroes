class Solution {


      void markRow(int row, int m,vector<vector<int>>& matrix){
         for(int j=0; j<m; j++){
           if(matrix[row][j]!=0) matrix[row][j]=-1;
      }
      }
        
                    
                    
    void markCol(int col, int n,vector<vector<int>>& matrix){

         for(int i=0; i<n; i++){
            if( matrix[i][col]!=0) matrix[i][col]=-1;
        }
          

    }
                 

public:
    void setZeroes(vector<vector<int>>& matrix) {

        int n=matrix.size();
        int m=matrix[0].size();


        

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(matrix[i][j]==0){
                    markRow(i,m,matrix);
                    markCol(j,n,matrix);
                }
            }
        }

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(matrix[i][j]==-1){
                    matrix[i][j]=0;
                 
                }
            }
        }
        
    }
};




////////////////////////better approach
class Solution {


   
                 

public:
    void setZeroes(vector<vector<int>>& matrix) {

        int n=matrix.size();
        int m=matrix[0].size();

        vector<int>row(n,0);
        vector<int>col(m,0);



        

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(matrix[i][j]==0){
                   row[i]=1;
                   col[j]=1;
                }
            }
        }

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if( row[i]==1 || col[j]==1){
                    matrix[i][j]=0;

                }
                 
            }
        }
        
    }
};



////////////////////////////optimal approach
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();

        int col0 = 1;  // to track if first column needs to be zeroed

        // Step 1: mark the rows & cols
        for (int i = 0; i < n; i++) {
            if (matrix[i][0] == 0) col0 = 0; // if first col has zero

            for (int j = 1; j < m; j++) {    // check from second column
                if (matrix[i][j] == 0) {
                    matrix[i][0] = 0;   // mark row
                    matrix[0][j] = 0;   // mark col
                }
            }
        }

        // Step 2: update the matrix (ignoring first row & col)
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                if (matrix[i][0] == 0 || matrix[0][j] == 0) {
                    matrix[i][j] = 0;
                }
            }
        }

        // Step 3: handle first row 
        if (matrix[0][0] == 0) {
            for (int j = 0; j < m; j++) {
                matrix[0][j] = 0;
            }
        }

        // Step 4: handle first column
        if (col0 == 0) {
            for (int i = 0; i < n; i++) {
                matrix[i][0] = 0;
            }
        }
    }
};
